name: CI-CD-Pipeline-to-AWS-ElasticBeanstalk
env:
  EB_PACKAGE_S3_BUCKET_NAME: "gabkings"
  EB_APPLICATION_NAME: "flask-app"
  EB_ENVIRONMENT_NAME: "MY_Flask_App_Env-env"
  DEPLOY_PACKAGE_NAME: "flask-app-${{ github.sha }}.zip"
  AWS_REGION_NAME: "us-west-2"

on:
  push:
    branches:
      - develop

jobs:
  my_ci_pipeline:
    runs-on: ubuntu-latest

    steps:
      - name: Git clone our repository
        uses: actions/checkout@v2

      - name: Set up Python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

        # Install Python Dependencies
      # - name: Install dependencies
      #   run: |
      #     python -m pip install --upgrade pip
      #     pip install -r requirements.txt; 
      #   # run: pip install -r ./requirements.txt

      - name: Configure my AWS Credentils
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.MY_AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.MY_AWS_SECRET_KEY }}
          aws-region: ${{ env.AWS_REGION_NAME }}

      # Build App and Run Application Test
      - name: Build Application and Run unit Test
        run: python run.py & pytest

      - name: Copy our Deployment package to S3 bucket
        run: aws s3 cp ${{ env.DEPLOY_PACKAGE_NAME }} s3://${{ env.EB_PACKAGE_S3_BUCKET_NAME}}/

      - name: Print nice message on completion of CI Pipeline
        run: echo "CI Pipeline part finished successfully"

  my_cd_pipeline:
    runs-on: ubuntu-latest
    needs: [my_ci_pipeline]

    if: github.ref == 'refs/heads/develop'

    steps:
      - name: Configure my AWS Credentils
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.MY_AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.MY_AWS_SECRET_KEY }}
          aws-region: ${{ env.AWS_REGION_NAME }}

      - name: Create CodeDeploy Deployment
        id: deploy
        run: |
          # Assuming the Deployment Group is already setup
          aws deploy create-deployment \
            --application-name application-name \
            --deployment-group-name AppDeploymentGroupName \
            --deployment-config-name CodeDeployDefault.OneAtATime \
            --github-location repository=${{ github.repository }},commitId=${{ github.sha }}

      - name: Print nice message on completion of CD Pipeline
        run: echo "CD Pipeline part finished successfully"
